import functions as fs
import unittest
import sqlite3

con = sqlite3.connect('Amiko.db', check_same_thread=False)
cur=con.cursor()

class TestAmikoBot(unittest.TestCase):

  
    def test_tagcheck1(self):
       check="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ üì±"
       self.assertEqual(fs.tagCheck(check), None)
    def test_tagcheck2(self):
       check="asdadsads"
       self.assertEqual(fs.tagCheck(check), '–ù—É –Ω–µ—Ç, –≤—ã–±–µ—Ä–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—ç–≥–∏!')
    def test_adduserCheck(self):
       id=298794557
       un="owilover"
       self.assertEqual(fs.addUser(id,un),"–°—Ç–∞—Ä—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    def test_adduserCheck2(self):
       id=42112341234
       un="owalLavr"
       cur.execute("DELETE FROM Users WHERE IdUser=?",(id,))
       con.commit()
       self.assertEqual(fs.addUser(id,un),"–ù–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
       
    def test_offCheck(self):
       id=298794557
       self.assertIsNotNone(fs.showUrOff(id))
       
    def test_offCheck2(self):
       id=298731132
       self.assertEqual(fs.showUrOff(id),"")
    def test_updateOff(self):
       id=298794557
       what="descr"
       new="–ü–ª—é—à–µ–≤–∞—è –∏–≥—Ä—É—à–∫–∞, –ø–µ—Ä–µ–∂–∏–≤—à–∞—è –º–Ω–æ–≥–æ–µ..."
       yes=fs.updateOff(id,what,new)
       self.assertAlmostEqual(str(yes[0]),"–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! –ñ–µ–ª–∞–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â—ë –≤ —ç—Ç–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?")
       
       
       
       
